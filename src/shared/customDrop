import React, { useState } from 'react';
import { View, TouchableOpacity, FlatList, Image, StyleSheet } from 'react-native';
import { AntDesign, MaterialIcons } from '@expo/vector-icons';
import { Text } from 'react-native-paper';
import Colors from '@/constants/color';
import { heightPercentageToDP as hp } from 'react-native-responsive-screen';

type Props = {
  data?: any;
  press?: any;
  placeholder?: string;
}

const Dropdown = ({ data, press, placeholder }: Props) => {
  const [isOpen, setIsOpen] = useState(false);
  const [selectedItem, setSelectedItem] = useState<any>(null);

  const handleSelect = (item: any) => {
    setSelectedItem(item);
    press(item);
    setIsOpen(false);
  };

  return (
    <View style={{ width: '100%', marginBottom: hp(2) }}>
      <TouchableOpacity style={styles.dropdown} onPress={() => setIsOpen(!isOpen)} activeOpacity={0.6}>
        <View style={{flexDirection:'row', alignItems:'center', gap:10}}>
          {selectedItem?.image && (
            <Image source={selectedItem.image} style={{ width: 25, height: 25 }} />
          )}
          <Text variant='titleSmall' style={{fontFamily:'i400'}}>
            {selectedItem ? selectedItem.label : placeholder || 'Select an option'}
          </Text>
        </View>
        <MaterialIcons
          name={isOpen ? 'keyboard-arrow-up' : 'keyboard-arrow-down'}
          size={hp(3)}
          color="#000"
        />
      </TouchableOpacity>

      {isOpen && (
        <View style={styles.dropdownList}>
          <FlatList
            data={data}
            keyExtractor={(item, index) => index.toString()}
            renderItem={({ item }) => (
              <TouchableOpacity style={styles.item} onPress={() => handleSelect(item)} activeOpacity={0.6}>
                {item.image && (
                  <Image source={item.image} style={{ width: 25, height: 25}} />
                )}
                <Text variant='titleSmall' style={{ fontFamily: 'i400' }}>{item.label}</Text>
              </TouchableOpacity>
            )}
            scrollEnabled={true}
          />
        </View>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  dropdown: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent:'space-between',
    padding: hp(1.5),
    borderWidth: hp(.12),
    borderColor: Colors.green,
    borderRadius: hp(1.5),
    backgroundColor: Colors.white,
  },
  dropdownList: {
    borderWidth: hp(.12),
    borderColor: Colors.green,
    borderRadius: hp(1.5),
    backgroundColor: Colors.white,
    marginTop: hp(.5),
    maxHeight: hp(20),
  },
  item: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: hp(1.5),
    borderBottomWidth: hp(.1),
    borderBottomColor: '#eee',
    gap:hp(1)
  }
});

export default Dropdown;
